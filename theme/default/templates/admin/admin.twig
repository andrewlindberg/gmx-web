{% import 'macros/navbar.twig' as navbar %}
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="{{ base_url() }}/assets/favicon.ico">
    <title>{% block title %}{{ title }} | {{ trans('labels', 'admin_panel') }}{% endblock %}</title>
    <link rel="stylesheet" href="{{ base_url() }}/assets/css/uikit.css" />
    <link rel="stylesheet" href="{{ base_url() }}/assets/css/all.css" />
    <link rel="stylesheet" href="{{ base_url() }}/assets/css/style.css" />
    <script src="{{ base_url() }}/assets/js/jquery-3.3.1.min.js"></script>
    <script src="{{ base_url() }}/assets/js/uikit.js"></script>
    <script src="{{ base_url() }}/assets/js/all.js"></script>
    {% block style %}{% endblock %}
</head>
<body>
<div class="uk-container-expand admin">
    <div uk-sticky="sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky">
        {{ navbar.adminbar(menu) }}
    </div>
    {{ navbar.sidebar(menu) }}
</div>
<div class="uk-container admin">
    <main role="main" class="container">
        <div class="uk-position-center uk-hidden" id="spinner">
            <div uk-spinner="ratio: 5"></div>
        </div>
        <div class="uk-margin uk-flex uk-flex-right">
            {% block subnav %}{% endblock %}
        </div>
        {% for message in flash_messages.success %}
            <div class="uk-alert-success" uk-alert>
                <a class="uk-alert-close" uk-close></a>
                <h5>{{ message }}</h5>
            </div>
        {% endfor %}

        {% for message in flash_messages.error %}
            <div class="uk-alert-danger" uk-alert>
                <a class="uk-alert-close" uk-close></a>
                <h5>{{ message }}</h5>
            </div>
        {% endfor %}

        {% if breadcrumbs is not empty %}
            <ul class="uk-breadcrumb">
                {% for breadcrumb in breadcrumbs %}
                    {% if loop.last %}
                        <li><span>{{ breadcrumb.title }}</span></li>
                    {% else %}
                        <li><a href="{{ breadcrumb.url }}">{{ breadcrumb.title }}</a></li>
                    {% endif %}
                {% endfor %}
            </ul>
        {% endif %}

        {% block content %}{% endblock %}
    </main>
    {% block modals %}{% endblock %}
    <script>
        window.CSRF_TOKEN = {{ csrf_token_json() }};
        $.ajaxPrefilter(function (options) {
            $('#spinner').removeClass('uk-hidden');
            if (options.processData && options.contentType === 'application/x-www-form-urlencoded; charset=UTF-8') {
                options.data = (options.data ? options.data + '&' : '') + $.param(window.CSRF_TOKEN);
            }
        });
        $(document).ajaxComplete(function(event, xhr) {
            $('#spinner').addClass('uk-hidden ');
            xhr.then(function (data) {
                if (data.csrf) {
                    window.CSRF_TOKEN = data.csrf;
                }
            })
        });

        UIkit.util.on('form.delete-form', 'submit', function (e) {
            e.preventDefault();
            e.target.blur();
            var form = this;
            UIkit.modal.confirm('{{ trans('labels', 'are_you_sure') }}', {
                labels: {
                    ok: '{{ trans('buttons', 'delete') }}',
                    cancel: '{{ trans('buttons', 'cancel') }}'
                }
            }).then(function () {
                form.submit();
            });
        });
        $(document).ready(function () {
            $('.lang-select').on('click', 'a', function (e) {
                e.preventDefault();
                e.stopPropagation();
                var lang = $(this).data('lang');
                $.post('{{ path_for('language')}}', {lang: lang})
                    .always(function() {
                        location.reload()
                    });
            });

            const InputValidator = (type, value) => {
                switch (type) {
                    case 'number':
                        return /^\d+$/i.test(value);
                    case 'email':
                        return /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/.test(value);
                    case 'url':
                        return /^(https?:\/\/)?([\w.]+)\.([a-z]{2,6}\.?)(\/[\w.]*)*\/?$/.test(value);
                    case 'ip':
                        return /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/.test(value);
                    default:
                        return true;
                }
            };

            $(function(){
                let oldVal, newVal, type;

                $('[contenteditable]')
                    .keypress(function(e){
                        if(e.which === 13 && $(this).data('type') !== 'textarea'){
                            return false;
                        }
                    })
                    .focus(function(){
                        type = $(this).data('type');
                        oldVal = $(this).text();
                    })
                    .blur(function(){
                        newVal = $(this).text();
                        let id = $(this).data('id');
                        if(newVal !== oldVal){
                            if (!InputValidator(type, newVal)) {
                                $(this).text(oldVal);
                                return;
                            }
                            $.post(location.toString(), { id: id, value: newVal });
                        }
                    });
            });
        });
    </script>
    {% block javascript %}{% endblock %}
</div>
</body>
</html>
