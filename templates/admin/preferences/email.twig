{% extends 'admin/admin.twig' %}

{% import 'macros/forms.twig' as forms %}

{% block content %}
<div class="uk-card uk-card-default uk-card-body uk-width-1-1@m">
	{% include 'admin/preferences/tabs.twig' with {'href': currentHref} %}
	<form action="{{ form.getAction() }}" method="post">
		{{ csrf_token() }}
		{{ forms.element_checkbox(form.enabled) }}
		{{ forms.element_input(form.from_name, {"label": true}) }}
		{{ forms.element_input(form.from_email, {"label": true}) }}
		{{ forms.element_select(form.transport_type) }}
		<div id="email_pref_smtp" class="{{ form.transport_type.getValue() != "smtp" ? 'd-none' : ''}}">
			<fieldset class="uk-width-1-1@m">
				<legend>SMTP</legend>
                {{ forms.element_input(form.smtp_host, {"label": true}) }}
                {{ forms.element_input(form.smtp_port, {"label": true}) }}
                {{ forms.element_select(form.smtp_secure) }}
                {{ forms.element_input(form.smtp_user, {"label": true}) }}
                {{ forms.element_input(form.smtp_pass, {"label": true}) }}
			</fieldset>
		</div>
		<div class="form-group">
			<input type="submit" class="uk-button uk-button-primary hvr-grow" value="{{ trans('buttons', 'save') }}">
			<a href="#" class="uk-button uk-button-warning hvr-grow" id="testMail">{{ trans('admin_preferences', 'test_mail') }}</a>
		</div>
	</form>
</div>
{% endblock %}

{% block javascript %}
	{{ parent() }}
	<script>
        $(document).ready(function () {
            UIkit.util.on('#testMail', 'click', function (e) {
                e.preventDefault();
                e.target.blur();
                UIkit.notification({
                    message: 'Testing...',
                    pos: 'bottom-right',
                    timeout: 5000
                });
                $.post('{{ path_for(constants.admin.preferences.ROUTE_EMAIL_TEST) }}', $('#mailConfigForm').serialize())
                    .done(function (data) {
                        if (data.success) {
                            UIkit.notification({
                                message: 'Success!',
                                status: 'success',
                                pos: 'bottom-right',
                                timeout: 8000
                            });
                        } else {
                            UIkit.notification({
                                message: 'Fail: ' + data.message || 'Unknown',
                                status: 'danger',
                                pos: 'bottom-right',
                                timeout: 8000
                            });
                        }
                    })
                    .catch(function () {
                        UIkit.notification({
                            message: 'Fail: Server Error',
                            status: 'danger',
                            pos: 'bottom-right',
                            timeout: 8000
                        });
                    });
            });

			$('#email_pref_transport').on('change', function () {
				if ($(this).val() === 'smtp') {
				    $('#email_pref_smtp').removeClass('d-none');
				} else {
                    $('#email_pref_smtp').addClass('d-none');
				}
            });
		});
	</script>
{% endblock %}
